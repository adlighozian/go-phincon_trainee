// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// ContactHTTPHandler is an autogenerated mock type for the ContactHTTPHandler type
type ContactHTTPHandler struct {
	mock.Mock
}

// Add provides a mock function with given fields: w, r
func (_m *ContactHTTPHandler) Add(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// Delete provides a mock function with given fields: w, r
func (_m *ContactHTTPHandler) Delete(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// Detail provides a mock function with given fields: w, r
func (_m *ContactHTTPHandler) Detail(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// List provides a mock function with given fields: w, r
func (_m *ContactHTTPHandler) List(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// Update provides a mock function with given fields: w, r
func (_m *ContactHTTPHandler) Update(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

type mockConstructorTestingTNewContactHTTPHandler interface {
	mock.TestingT
	Cleanup(func())
}

// NewContactHTTPHandler creates a new instance of ContactHTTPHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewContactHTTPHandler(t mockConstructorTestingTNewContactHTTPHandler) *ContactHTTPHandler {
	mock := &ContactHTTPHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
